name: Build APK with Buildozer (Final Stable v4)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TERM: dumb

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Ensure entry file exists
      run: |
        if [ ! -f "main.py" ]; then
          echo "❌ ERROR: main.py not found. Make sure your entry file is named exactly main.py (case-sensitive)."
          ls -l
          exit 1
        fi
        echo "✅ main.py found."

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip openjdk-17-jdk python3-pip \
          libffi-dev libssl-dev libsqlite3-dev \
          libjpeg-dev libfreetype6-dev zlib1g-dev \
          automake autoconf libtool libtool-bin autopoint gettext pkg-config \
          m4 autoconf-archive make cmake ninja-build
        sudo mkdir -p /usr/share/aclocal
        pip install --upgrade pip wheel setuptools Cython==0.29.36
        pip install buildozer==1.4.0
        pip install git+https://github.com/kivy/python-for-android.git@develop

    - name: Patch libtool / autoconf
      run: |
        sudo ln -sf /usr/bin/libtoolize /usr/bin/libtool || true
        echo "m4_pattern_allow([^LT_SYS_SYMBOL_USCORE$])" | sudo tee -a /usr/share/aclocal/libtool.m4 > /dev/null
        echo "m4_pattern_allow([^_LT_PROG_LTMAIN$])" | sudo tee -a /usr/share/aclocal/libtool.m4 > /dev/null

    - name: Cache Buildozer & Android SDK/NDK
      uses: actions/cache@v3
      with:
        path: ~/.buildozer
        key: buildozer-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}
        restore-keys: buildozer-${{ runner.os }}-

    - name: Cache Gradle
      uses: actions/cache@v3
      with:
        path: ~/.gradle
        key: gradle-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}
        restore-keys: gradle-${{ runner.os }}-

    - name: Install Android Commandline Tools
      run: |
        mkdir -p $HOME/.buildozer/android/platform
        cd $HOME/.buildozer/android/platform
        if [ ! -d "android-sdk/cmdline-tools/latest" ]; then
          wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdtools.zip
          unzip -q cmdtools.zip -d android-sdk
          mkdir -p android-sdk/cmdline-tools/latest
          mv android-sdk/cmdline-tools/* android-sdk/cmdline-tools/latest/ || true
        fi
        yes | android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/.buildozer/android/platform/android-sdk --licenses
        yes | android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/.buildozer/android/platform/android-sdk "platform-tools" "platforms;android-33" "build-tools;33.0.2"

    - name: Fix Buildozer sdkmanager path
      run: |
        mkdir -p $HOME/.buildozer/android/platform/android-sdk/tools/bin
        ln -sf $HOME/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin/sdkmanager \
               $HOME/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager

    - name: Sanity check buildozer.spec
      run: |
        if [ ! -f buildozer.spec ]; then
          echo "⚠️ No buildozer.spec found — generating default one..."
          buildozer init
        fi
        sed -i '/reportlab/d' buildozer.spec || true

    - name: Clean previous builds
      run: buildozer android clean || true

    - name: Build APK (debug)
      run: |
        export CFLAGS="-fPIC"
        mkdir -p build-logs
        buildozer android debug --verbose 2>&1 | tee build-logs/build-error-log.txt
      continue-on-error: true

    - name: Locate APK
      run: |
        echo "Searching for built APK..."
        find . -type f -name "*.apk" || echo "⚠️ No APK found yet."
        mkdir -p bin
        find . -type f -name "*.apk" -exec cp {} bin/ \; || true

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: built-apk
        path: bin/*.apk

    - name: Upload build logs
      uses: actions/upload-artifact@v4
      with:
        name: build-error-log
        path: build-logs/build-error-log.txt
